{"version":3,"file":"static/js/610.3d68f38d.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://samurai-way/./src/components/common/FormsComtrols/FormsControls.module.css?3156","components/common/FormsComtrols/FormsControls.tsx","hoc/withAuthRedirect.tsx","utils/validators.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Profile_img__WUova\",\"profilePic\":\"Profile_profilePic__DpaT4\",\"about\":\"Profile_about__rnebS\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport const ProfileStatus = (props: ProfileStatusType) => {\r\n\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => setStatus(props.status), [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => setStatus(e.currentTarget.value)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input value={status} onBlur={deactivateEditMode} onChange={inputHandler}\r\n                           autoFocus/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from \"../Profile.module.css\";\r\nimport {ProfileType} from \"../../../redux/reducers/ProfileReducer\";\r\nimport profilePic from './../../../assets/images/profile-anonymous2.png'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileInfo = (props: ProfileInfoComponentType) => {\r\n\r\n\r\n\r\n\r\n    if (!props.profile.photos) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.img}\r\n                     src=\"https://cdn.freelance.ru/img/portfolio/pics/00/38/39/3684699.jpg?mt=60e595fd\"/>\r\n            </div>\r\n            <div className={s.profile}>\r\n                <img className={s.profilePic} src={props.profile.photos ? props.profile.photos.small : profilePic}/>\r\n                <div>\r\n                    <div><span>{props.profile.fullName}</span></div>\r\n                    <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                    <div><span>{props.profile.aboutMe}</span></div>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    Contacts\r\n                    <ul>\r\n                        <li>FaceBook: {props.profile.contacts.facebook}</li>\r\n                        <li>WebSite: {props.profile.contacts.website}</li>\r\n                        <li>VK: {props.profile.contacts.vk}</li>\r\n                        <li>YT: {props.profile.contacts.youtube}</li>\r\n                        <li>Github: {props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__r9ezx\",\"posts\":\"MyPosts_posts__aQjKO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__XLHQL\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n    likesCount: number\r\n    deletePost: (id: string) => void\r\n    id: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n\r\n\r\n    const deletePostHandler = () => {\r\n      props.deletePost(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n\r\n            <div className={s.item}><img src=\"\"/>\r\n                {props.message}  <button onClick={deletePostHandler}>x</button>\r\n                <div>\r\n                <button>Like</button> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostsDataType} from \"../../../redux/reducers/ProfileReducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {TextArea} from \"../../common/FormsComtrols/FormsControls\";\r\n\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    posts: PostsDataType[]\r\n    addPost: (postText: string) => void\r\n    deletePost: (id: string) => void\r\n}\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n    console.log(\"myposts rendered\")\r\n\r\n    let postsElement = props.posts.map(post =>\r\n        <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            message={post.message}\r\n            likesCount={post.likesCount}\r\n            deletePost={props.deletePost}\r\n        />)\r\n\r\n\r\n    const addPost = (values: AddPostFormDataType) => props.addPost(values.postText)\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElement}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype AddPostFormDataType = {\r\n    postText: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nexport const AddPostForm: React.FC<InjectedFormProps<AddPostFormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'postText'}\r\n                    component={TextArea}\r\n                    placeholder={'new post here'}\r\n                    validate={[maxLength10, required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm<AddPostFormDataType>({\r\n    form: \"post\"\r\n})(AddPostForm)\r\n\r\n","import React from \"react\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, deletePost, ProfileActionsType} from \"../../../redux/reducers/ProfileReducer\";\r\nimport {AppStoreType} from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStoreType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ProfileActionsType) => void) => {\r\n    return {\r\n        addPost: (postText: string) => {\r\n            dispatch(addPost(postText))\r\n        },\r\n        deletePost: (id: string) => {\r\n            dispatch(deletePost(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/reducers/ProfileReducer\";\r\n\r\n\r\n\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nconst Profile = (props: ProfileComponentType) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus }/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/redux-store\";\r\nimport {\r\n    getUserProfile, getUserStatus,\r\n    ProfileType, updateUserStatus,\r\n} from \"../../redux/reducers/ProfileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {profileAPI} from \"../../api/api\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    autorizedUserID: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\ntype ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype ProfileContainerPropsType = RouteComponentProps<ParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = \"\" + this.props.autorizedUserID\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props.profile} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserID: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}), withRouter, withAuthRedirect)(ProfileContainer)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__0XrZx\",\"error\":\"FormsControls_error__nXs4F\"};","import React, {ReactNode} from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\ntype TextAreaType = {\r\n    input: InputType\r\n    meta: MetaType\r\n    placeholder: string\r\n    required: boolean\r\n    children: ReactNode\r\n}\r\n\r\ntype InputType = {\r\n    name: string\r\n    onBlur: () => void\r\n    onChange: () => void\r\n    onDragStart: () => void\r\n    onDrop: () => void\r\n}\r\n\r\ntype MetaType = {\r\n    active: boolean\r\n    asyncValidating: boolean\r\n    autofilled: boolean\r\n    dirty: boolean\r\n    dispatch: () => void\r\n    error: any\r\n    touched: boolean\r\n}\r\n\r\n\r\nconst FormControl = (props: TextAreaType) => {\r\n    const {input, meta: {touched, error}, ...restProps} = props\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TextArea = (props: TextAreaType) =><FormControl {...props}>{<textarea {...props.input} {...props}/>}</FormControl>\r\n\r\n\r\nexport const Input = (props: TextAreaType) => <FormControl {...props}>{<input {...props.input} {...props}/>}</FormControl>\r\n\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStoreType} from \"../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","\r\n\r\n\r\nexport const required = (value: string) => {\r\n    if(value) return undefined\r\n\r\n    return \"field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => value && value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","value","onBlur","updateUserStatus","onChange","e","currentTarget","autoFocus","onDoubleClick","ProfileInfo","profile","photos","className","s","src","small","profilePic","fullName","aboutMe","contacts","facebook","website","vk","youtube","github","Preloader","message","onClick","deletePost","id","likesCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextArea","placeholder","validate","required","MyPostsContainer","connect","state","posts","profilePage","dispatch","addPost","postText","console","log","postsElement","map","post","values","ProfileContainer","userId","this","match","params","autorizedUserID","history","push","getUserProfile","getUserStatus","React","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","input","meta","touched","error","hasError","children","Input","mapStateToProps","Component","restProps","to","maxLength","length","undefined","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}